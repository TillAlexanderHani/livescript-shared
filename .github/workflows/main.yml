name: Podcast Pipeline - Fast & Simple
on:
  schedule:
    - cron: '0 6 * * *'   # 6 AM UTC 
    - cron: '0 12 * * *'  # 12 PM UTC 
    - cron: '0 18 * * *'  # 6 PM UTC 
    - cron: '0 0 * * *'   # 12 AM UTC 
  
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: podcast-pipeline-singleton
  cancel-in-progress: true

jobs:
  process-podcasts:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 1
        
    - name: Quick Duplicate Check
      id: duplicate_check
      run: |
        # Skip only if very recent (20 minutes) and not manual
        if [ "${{ github.event_name }}" != "workflow_dispatch" ] && [ -f "emailed_episodes.json" ]; then
          LAST_MODIFIED=$(stat -c %Y emailed_episodes.json 2>/dev/null || echo 0)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LAST_MODIFIED))
          
          if [ $TIME_DIFF -lt 1200 ]; then
            echo "Recent run detected - skipping"
            echo "action=skip" >> $GITHUB_OUTPUT
            exit 0
          fi
        fi
        
        echo "action=run" >> $GITHUB_OUTPUT
        
    - name: Setup Python
      if: steps.duplicate_check.outputs.action == 'run'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Install Dependencies (Minimal)
      if: steps.duplicate_check.outputs.action == 'run'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y ffmpeg --no-install-recommends
        
        pip install --upgrade pip
        pip install "numpy<2.0" torch==1.13.1 torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        pip install openai-whisper==20231117 feedparser==6.0.10 requests==2.31.0 python-dateutil==2.8.2
        
    - name: Debug Environment
      run: |
        echo "=== ENVIRONMENT DEBUG ==="
        echo "Current directory:"
        pwd
        echo "Files in current directory:"
        ls -la
        echo "Python working directory check:"
      python -c "import os; print(f'Python CWD: {os.getcwd()}'); print(f'Files: {os.listdir(\".\")}')"
        echo "=== END DEBUG ==="

    - name: Run Pipeline
      if: steps.duplicate_check.outputs.action == 'run'
      env:
        MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      run: |
        echo "Starting pipeline..."
        python podcast_shared_live_5.py
        
    - name: Commit Changes
      if: steps.duplicate_check.outputs.action == 'run'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -f "emailed_episodes.json" ] && ! git diff --quiet emailed_episodes.json; then
          git add emailed_episodes.json
          git commit -m "Update podcast database [$(date -u '+%Y-%m-%d %H:%M UTC')]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Status
      if: always()
      run: |
        echo "Run complete: ${{ steps.duplicate_check.outputs.action || 'unknown' }}"
        echo "Manual runs always execute"
        rm -f pipeline.lock *.tmp downloads/* 2>/dev/null || true
